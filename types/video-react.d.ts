import React = require("react");

/** Declaration file generated by dts-gen */

export class Bezel extends React.Component {
    constructor(props: any, context: any);

    handleStateChange(state: any, prevState: any): void;

    render(): any;

    static displayName: string;

}

export class BigPlayButton extends React.Component {
    constructor(props: any, context: any);

    componentDidMount(): void;

    handleClick(): void;

    render(): any;

    static defaultProps: {
        position: string;
    };

    static displayName: string;

}

export class ControlBar extends React.Component {
    constructor(props: any);

    getChildren(): any;

    getDefaultChildren(): any;

    getFullChildren(): any;

    render(): any;

    static defaultProps: {
        autoHide: boolean;
        disableCompletely: boolean;
    };

    static displayName: string;

}

export class ForwardControl extends React.Component {
    constructor(props: any, context: any);

    handleClick(): void;

    render(): any;

    static defaultProps: {
        seconds: number;
    };

    static displayName: string;

}

export class FullscreenToggle extends React.Component {
    constructor(props: any, context: any);

    handleClick(): void;

    render(): any;

    static displayName: string;

}

export class MenuButton extends React.Component {
    constructor(props: any, context: any);

    activateMenuItem(index: any): void;

    commitSelection(index: any): void;

    componentDidUpdate(prevProps: any): void;

    handleBlur(): void;

    handleClick(): any;

    handleDownArrow(e: any): void;

    handleEscape(): void;

    handleFocus(): void;

    handleIndexChange(index: any): void;

    handleKeyPress(event: any): void;

    handleReturn(e: any): void;

    handleSelectItem(i: any): void;

    handleTab(e: any): void;

    handleUpArrow(e: any): void;

    render(): any;

    renderMenu(): any;

    static displayName: string;

}

export class PlayToggle extends React.Component {
    constructor(props: any, context: any);

    handleClick(): void;

    render(): any;

    static displayName: string;

}

export class PlaybackRate extends React.Component {
    constructor(props: any, context: any);

    render(): any;

    static displayName: string;

}

export class PlaybackRateMenuButton extends React.Component {
    constructor(props: any, context: any);

    handleSelectItem(index: any): void;

    render(): any;

    static defaultProps: {
        rates: number[];
    };

    static displayName: string;

}

export class Player extends React.Component {
    constructor(props: any);

    addTextTrack(...args: any[]): void;

    canPlayType(...args: any[]): void;

    componentDidMount(): void;

    componentWillUnmount(): void;

    forward(seconds: any): void;

    getChildren(props: any): any;

    getDefaultChildren(originalChildren: any): any;

    getState(): any;

    getStyle(): any;

    handleBlur(): void;

    handleFocus(): void;

    handleFullScreenChange(): void;

    handleKeyDown(): void;

    handleMouseDown(): void;

    handleMouseMove(): void;

    handleResize(): void;

    handleStateChange(state: any, prevState: any): void;

    load(): void;

    pause(): void;

    play(): void;

    render(): any;

    replay(seconds: any): void;

    seek(time: any): void;

    setWidthOrHeight(style: any, name: any, value: any): void;

    startControlsTimer(): void;

    subscribeToStateChange(listener: any): any;

    toggleFullscreen(): void;

    static defaultProps: {
        aspectRatio: string;
        fluid: boolean;
        muted: boolean;
        playsInline: boolean;
        preload: string;
    };

    static displayName: string;

}

export class ProgressControl extends React.Component {
    constructor(props: any, context: any);

    handleMouseMove(event: any): void;

    render(): any;

    static displayName: string;

}

export class ReplayControl extends React.Component {
    constructor(props: any, context: any);

    handleClick(): void;

    render(): any;

    static defaultProps: {
        seconds: number;
    };

    static displayName: string;

}

export class SeekBar extends React.Component {
    constructor(props: any, context: any);

    componentDidMount(): void;

    componentDidUpdate(): void;

    getNewTime(event: any): any;

    getPercent(): any;

    handleMouseDown(): void;

    handleMouseMove(event: any): void;

    handleMouseUp(event: any): void;

    render(): any;

    stepBack(): void;

    stepForward(): void;

    static displayName: string;

}

export class Shortcut extends React.Component {
    constructor(props: any, context: any);

    canBeClicked(player: any, e: any): any;

    componentDidMount(): void;

    componentDidUpdate(prevProps: any): void;

    componentWillUnmount(): void;

    handleClick(e: any): void;

    handleDoubleClick(e: any): void;

    handleKeyPress(e: any): any;

    mergeShortcuts(): any;

    render(): any;

    toggleFullscreen(player: any, actions: any): void;

    togglePlay(player: any, actions: any): void;

    static defaultProps: {
        clickable: boolean;
        dblclickable: boolean;
    };

    static displayName: string;

}

export class Slider extends React.Component {
    constructor(props: any, context: any);

    calculateDistance(event: any): any;

    componentWillUnmount(): void;

    getProgress(): any;

    handleBlur(e: any): void;

    handleClick(event: any): void;

    handleFocus(e: any): void;

    handleKeyPress(event: any): void;

    handleMouseDown(event: any): void;

    handleMouseMove(event: any): void;

    handleMouseUp(event: any): void;

    render(): any;

    renderChildren(): any;

    stepBack(): void;

    stepForward(): void;

    static displayName: string;

}

export class Video extends React.Component {
    constructor(props: any);

    addTextTrack(...args: any[]): void;

    canPlayType(...args: any[]): void;

    componentDidMount(): void;

    forward(seconds: any): void;

    getProperties(): any;

    handleAbort(...args: any[]): void;

    handleCanPlay(...args: any[]): void;

    handleCanPlayThrough(...args: any[]): void;

    handleDurationChange(...args: any[]): void;

    handleEmptied(...args: any[]): void;

    handleEnded(...args: any[]): void;

    handleError(...args: any[]): void;

    handleFullscreenChange(): void;

    handleKeypress(): void;

    handleLoadStart(...args: any[]): void;

    handleLoadedData(...args: any[]): void;

    handleLoadedMetaData(...args: any[]): void;

    handlePause(...args: any[]): void;

    handlePlay(...args: any[]): void;

    handlePlaying(...args: any[]): void;

    handleProgress(...args: any[]): void;

    handleRateChange(...args: any[]): void;

    handleResize(...args: any[]): void;

    handleSeeked(...args: any[]): void;

    handleSeeking(...args: any[]): void;

    handleStalled(...args: any[]): void;

    handleSuspend(...args: any[]): void;

    handleTimeUpdate(...args: any[]): void;

    handleVolumeChange(...args: any[]): void;

    handleWaiting(...args: any[]): void;

    load(): void;

    pause(): void;

    play(): void;

    render(): any;

    renderChildren(...args: any[]): any;

    replay(seconds: any): void;

    seek(time: any): void;

    toggleFullscreen(): void;

    togglePlay(): void;

    static displayName: string;

}

export class VolumeMenuButton extends React.Component {
    constructor(props: any, context: any);

    handleBlur(): void;

    handleClick(): void;

    handleFocus(): void;

    render(): any;

    static defaultProps: {
        vertical: boolean;
    };

    static displayName: string;

}

export function CurrentTimeDisplay(_ref: any): any;

export function DurationDisplay(_ref: any): any;

export function LoadProgressBar(_ref: any): any;

export function LoadingSpinner(_ref: any): any;

export function MouseTimeDisplay(_ref: any): any;

export function PlayProgressBar(_ref: any): any;

export function PosterImage(_ref: any): any;

export function RemainingTimeDisplay(_ref: any): any;

export function TimeDivider(_ref: any): any;

export function operationReducer(...args: any[]): any;

export function playerReducer(...args: any[]): any;

export namespace Bezel {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function manager(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace manager {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace BigPlayButton {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function position(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace position {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ControlBar {
    namespace propTypes {
        function autoHide(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function autoHideTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function disableCompletely(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function disableDefaultControls(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace autoHide {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace autoHideTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace disableCompletely {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace disableDefaultControls {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace CurrentTimeDisplay {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace DurationDisplay {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ForwardControl {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function seconds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace seconds {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace FullscreenToggle {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoadProgressBar {
    const displayName: string;

    namespace propTypes {
        function buffered(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function duration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace buffered {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace duration {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace LoadingSpinner {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace MenuButton {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function inline(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function items(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSelectItem(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function selectedIndex(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace inline {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace items {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSelectItem {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace selectedIndex {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace MouseTimeDisplay {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function duration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function mouseTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace duration {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace mouseTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace PlayProgressBar {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function currentTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function duration(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function percentage(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace currentTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace duration {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace percentage {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace PlayToggle {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace PlaybackRateMenuButton {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function rates(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace rates {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Player {
    namespace contextTypes {
        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace propTypes {
        function aspectRatio(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function autoPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function fluid(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function height(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function loop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muted(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onAbort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onCanPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onCanPlayThrough(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onDurationChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onEmptied(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onEnded(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onError(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadedData(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadedMetadata(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPause(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPlaying(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onProgress(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onRateChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSeeked(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSeeking(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onStalled(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSuspend(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onTimeUpdate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onVolumeChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onWaiting(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function playsInline(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function poster(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function preload(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function startTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function videoId(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function width(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace aspectRatio {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace autoPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace fluid {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace height {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace loop {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muted {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onAbort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onCanPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onCanPlayThrough {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onDurationChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onEmptied {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onEnded {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onError {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadStart {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadedData {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadedMetadata {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPause {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPlaying {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onProgress {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onRateChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSeeked {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSeeking {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onStalled {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSuspend {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onTimeUpdate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onVolumeChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onWaiting {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace playsInline {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace poster {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace preload {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace startTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace videoId {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace width {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace PosterImage {
    const displayName: string;

    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function poster(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace poster {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ProgressControl {
    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace RemainingTimeDisplay {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace ReplayControl {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function seconds(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace seconds {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace SeekBar {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function mouseTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace mouseTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Shortcut {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function clickable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function dblclickable(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function manager(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function shortcuts(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace clickable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace dblclickable {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace manager {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace shortcuts {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Slider {
    namespace propTypes {
        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function getPercent(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function label(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onBlur(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onClick(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onFocus(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onMouseDown(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onMouseMove(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onMouseUp(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sliderActive(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function sliderInactive(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function stepBack(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function stepForward(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valuenow(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function valuetext(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function vertical(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace getPercent {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace label {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onBlur {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onClick {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onFocus {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onMouseDown {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onMouseMove {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onMouseUp {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sliderActive {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace sliderInactive {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace stepBack {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace stepForward {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valuenow {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace valuetext {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace vertical {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace TimeDivider {
    const displayName: string;

    namespace propTypes {
        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function separator(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace separator {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace Video {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function autoPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function crossOrigin(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function loop(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function muted(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onAbort(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onCanPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onCanPlayThrough(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onDurationChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onEmptied(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onEnded(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onError(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadStart(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadedData(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onLoadedMetadata(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPause(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPlay(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onPlaying(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onProgress(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onRateChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onResize(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSeeked(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSeeking(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onStalled(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onSuspend(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onTimeUpdate(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onVolumeChange(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function onWaiting(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function playsInline(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function poster(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function preload(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function src(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function startTime(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace autoPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace children {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace crossOrigin {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace loop {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace muted {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onAbort {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onCanPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onCanPlayThrough {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onDurationChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onEmptied {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onEnded {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onError {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadStart {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadedData {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onLoadedMetadata {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPause {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPlay {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onPlaying {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onProgress {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onRateChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onResize {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSeeked {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSeeking {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onStalled {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onSuspend {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onTimeUpdate {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onVolumeChange {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace onWaiting {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace playsInline {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace poster {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace preload {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace src {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace startTime {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace VolumeMenuButton {
    namespace propTypes {
        function actions(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function alwaysShowVolume(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function className(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function player(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function vertical(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace actions {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace alwaysShowVolume {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace className {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace player {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

        namespace vertical {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace playerActions {
    const FULLSCREEN_CHANGE: string;

    const OPERATE: string;

    const PLAYER_ACTIVATE: string;

    const USER_ACTIVATE: string;

    function activate(activity: any): any;

    function changeRate(rate: any, ...args: any[]): any;

    function changeVolume(volume: any, ...args: any[]): any;

    function forward(seconds: any, ...args: any[]): any;

    function handleFullscreenChange(isFullscreen: any): any;

    function mute(muted: any, ...args: any[]): any;

    function pause(...args: any[]): any;

    function play(...args: any[]): any;

    function replay(seconds: any, ...args: any[]): any;

    function seek(time: any, ...args: any[]): any;

    function toggleFullscreen(player: any): any;

    function togglePlay(...args: any[]): any;

    function userActivate(activity: any): any;

}

export namespace videoActions {
    const ABORT: string;

    const CAN_PLAY: string;

    const CAN_PLAY_THROUGH: string;

    const DURATION_CHANGE: string;

    const EMPTIED: string;

    const END: string;

    const END_SEEKING: string;

    const ERROR: string;

    const LOADED_DATA: string;

    const LOADED_META_DATA: string;

    const LOAD_START: string;

    const PAUSE: string;

    const PLAY: string;

    const PLAYING: string;

    const PROGRESS_CHANGE: string;

    const RATE_CHANGE: string;

    const RESIZE: string;

    const SEEKED: string;

    const SEEKING: string;

    const SEEKING_TIME: string;

    const STALLED: string;

    const SUSPEND: string;

    const TIME_UPDATE: string;

    const VOLUME_CHANGE: string;

    const WAITING: string;

    function handleAbort(videoProps: any): any;

    function handleCanPlay(videoProps: any): any;

    function handleCanPlayThrough(videoProps: any): any;

    function handleDurationChange(videoProps: any): any;

    function handleEmptied(videoProps: any): any;

    function handleEnd(videoProps: any): any;

    function handleEndSeeking(time: any): any;

    function handleError(videoProps: any): any;

    function handleLoadStart(videoProps: any): any;

    function handleLoadedData(videoProps: any): any;

    function handleLoadedMetaData(videoProps: any): any;

    function handlePause(videoProps: any): any;

    function handlePlay(videoProps: any): any;

    function handlePlaying(videoProps: any): any;

    function handleProgressChange(videoProps: any): any;

    function handleRateChange(videoProps: any): any;

    function handleResize(videoProps: any): any;

    function handleSeeked(videoProps: any): any;

    function handleSeeking(videoProps: any): any;

    function handleSeekingTime(time: any): any;

    function handleStalled(videoProps: any): any;

    function handleSuspend(videoProps: any): any;

    function handleTimeUpdate(videoProps: any): any;

    function handleVolumeChange(videoProps: any): any;

    function handleWaiting(videoProps: any): any;

}

